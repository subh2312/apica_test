version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
    networks:
      - my-network

  kafka:
    image: 'bitnami/kafka:latest'
    # environment: 
    #   - KAFKA_BROKER_ID: 1 
    #   - KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' 
    #   - ALLOW_PLAINTEXT_LISTENER: "yes" 
    #   - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 
    #     PLAINTEXT: PLAINTEXT
    #     PLAINTEXT_HOST: PLAINTEXT 
    #     KAFKA_LISTENERS: PLAINTEXT://:9092
    #     PLAINTEXT_HOST: //0.0.0.0:29092 
    #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    #     PLAINTEXT_HOST: //localhost:29092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # - KAFKA_CFG_ADVERTISED_LISTENERS=://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - '9092:9092'
    networks:
      - my-network
    depends_on:
      - zookeeper

  database:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root@2312
      - MYSQL_USERNAME=root
    volumes:
      - ./data:/var/lib/mysql
    ports:
      - 3307:3306
    networks:
      - my-network

  serviceregistry:
    build:
      context: ../Apica/ServiceRegistry
    ports:
      - '8081:8081'
    networks:
      - my-network
    environment:
      - eureka.client.fetchRegistry=false
      - eureka.client.registerWithEureka=false
      - eureka.instance.hostname=localhost
      - spring.application.name=ServiceRegistry
      

  userservice:
    build:
      context: ../Apica/UserService
    ports:
      - '8083:8083'
    networks:
      - my-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - spring.datasource.url=jdbc:mysql://database:3306/apica_test_db?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.pasword=root@2312
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://serviceregistry:8081/eureka/
      - eureka.instance.prefer-ip-address=true
      - spring.application.name=UserService
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.jpa.show-sql=true
      - spring.kafka.producer.bootstrap-servers=kafka:9092
      - spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
      - spring.kafka.producer.value-serializer=org.subhankar.userservice.config.JournalDTOSerializer
    depends_on:
      - zookeeper
      - kafka
      - database
      - serviceregistry

  authenticationservice:
    build:
      context: ../Apica/AuthenticationService
    ports:
      - '8082:8082'
    networks:
      - my-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=localhost:9092
      - spring.datasource.url=jdbc:mysql://database:3306/apica_test_db?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.pasword=root@2312
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://serviceregistry:8081/eureka/
      - eureka.instance.prefer-ip-address=true
      - jwt.expirationMs=86400000
      - jwt.secret=902ffc52f4ab670361e543008a5f8e86005edadfbc1df36f5cc375b433448aff
      - spring.application.name=AuthenticationService
    depends_on:
      - zookeeper
      - kafka
      - database
      - serviceregistry
      - userservice

  journalservice:
    build:
      context: ../Apica/JournalService
    ports:
      - '8084:8084'
    networks:
      - my-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - spring.datasource.url=jdbc:mysql://database:3306/apica_test_db?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.pasword=root@2312
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://serviceregistry:8081/eureka/
      - eureka.instance.prefer-ip-address=true
      - spring.application.name=JournalService
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.jpa.show-sql=true
      - spring.kafka.consumer.bootstrap-servers=kafka:9092
      - spring.kafka.consumer.auto-offset-reset=earliest
      - spring.kafka.consumer.group-id=group-1
      - spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
      - spring.kafka.consumer.value-deserializer=org.subhankar.journalservice.config.JournalDTODeSerializer
    depends_on:
      - zookeeper
      - kafka
      - database
      - serviceregistry
      - userservice

  apicagateway:
    build:
      context: ../Apica/ApicaGateway
    ports:
      - '8080:8080'
    networks:
      - my-network
    environment:
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.client.service-url.defaultZone=http://serviceregistry:8081/eureka/
      - eureka.instance.prefer-ip-address=true
      - spring.application.name=ApicaGateway
      - jwt.expirationMs=86400000
      - jwt.secret=902ffc52f4ab670361e543008a5f8e86005edadfbc1df36f5cc375b433448aff
    depends_on:
      - zookeeper
      - kafka
      - database
      - serviceregistry
      - userservice
      - authenticationservice
      - journalservice

networks:
  my-network: